import{R as c}from"./molecular-e392fe60.js";const l=a=>({now:a.dateRequested,source:a.DataSource,desc:a.Description,updated:a.LastUpdateLocalDateDisplay,current:{value:a.CurrentIndexValue,measured:new Date(a.CurrentIndexValueDate).toLocaleString("en-GB")},previous:{value:a.PerviousIndexValue,measured:new Date(a.PerviousIndexValueDate).toLocaleString("en-GB")},change:{value:a.IndexValueChange.toFixed(2),percentage:a.IndexValueChangePercent.toFixed(2)+"%"}}),d=async()=>{const n=await new c("https://charting.numberlens.com/api/teamearth/getdailyco2?authtoken=D43026302F294A5784F7512A8969FE37","json").get("");return l(n)},h=async a=>{const n=a.map(e=>fetch("http://api.tvmaze.com/singlesearch/shows?q="+e.name)),o=await Promise.all(n).then(async e=>Promise.all(e.map(async t=>await t.json()))),i=o.map(e=>{var t,s;return console.log(e._links),fetch((s=(t=e._links)==null?void 0:t.previousepisode)==null?void 0:s.href.replace("http:","https:"))});return(await Promise.all(i).then(async e=>Promise.all(e.map(async t=>await t.json())))).map((e,t)=>{var s,r;return{key:t,name:a[t].name,last_seen:+new Date(a[t].day)+864e5,airstamp:+new Date(e.airstamp),ep:e.name,abt:e.summary||"No Description Available",image:((s=e.image)==null?void 0:s.original)||((r=o[t].image)==null?void 0:r.original)}}).filter((e,t)=>e.last_seen<e.airstamp?1:0)};export{d as a,h as g};
