import{R as e}from"./molecular-c58642ff.js";const a=async()=>{const a=new e("https://charting.numberlens.com/api/teamearth/getdailyco2?authtoken=D43026302F294A5784F7512A8969FE37","json"),t=await a.get("");return{now:(n=t).dateRequested,source:n.DataSource,desc:n.Description,updated:n.LastUpdateLocalDateDisplay,current:{value:n.CurrentIndexValue,measured:new Date(n.CurrentIndexValueDate).toLocaleString("en-GB")},previous:{value:n.PerviousIndexValue,measured:new Date(n.PerviousIndexValueDate).toLocaleString("en-GB")},change:{value:n.IndexValueChange.toFixed(2),percentage:n.IndexValueChangePercent.toFixed(2)+"%"}};var n},t=async e=>{const a=e.map((e=>fetch("http://api.tvmaze.com/singlesearch/shows?q="+e.name))),t=await Promise.all(a).then((async e=>Promise.all(e.map((async e=>await e.json()))))),n=t.map((e=>{var a,t;return console.log(e._links),fetch(null==(t=null==(a=e._links)?void 0:a.previousepisode)?void 0:t.href.replace("http:","https:"))}));return(await Promise.all(n).then((async e=>Promise.all(e.map((async e=>await e.json())))))).map(((a,n)=>{var r,s;return{key:n,name:e[n].name,last_seen:+new Date(e[n].day)+864e5,airstamp:+new Date(a.airstamp),ep:a.name,abt:a.summary||"No Description Available",image:(null==(r=a.image)?void 0:r.original)||(null==(s=t[n].image)?void 0:s.original)}})).filter(((e,a)=>e.last_seen<e.airstamp?1:0))};export{t as a,a as g};
